kind: pipeline
type: docker
name: default

steps:

  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: drone-cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./node_modules
        # We can only mount volume caches into the working directory, so all steps which use Gradle must have
        # the GRADLE_USER_HOME environment variable pointing here.
        - ./gradle_cache
        - ./sonar_cache

  - name: tests
    image: eclipse-temurin:17-jdk
    environment:
      GRADLE_USER_HOME: /drone/src/gradle_cache
    commands:
      - chmod +x gradlew
      - ./gradlew test

  - name: integration-tests
    image: quay.io/testcontainers/dind-drone-plugin
    privileged: true
    environment:
      GRADLE_USER_HOME: /drone/src/gradle_cache
      CI_WORKSPACE: /drone/src
      DOCKER_CONFIG_JSON:
        from_secret: docker_config
      DOCKER_CONFIG: /drone/dockerconfig
      INTEGRATION_TEST_GOVUK_NOTIFY_API_KEY:
        from_secret: govuk_notify_integration_test_api_key
    volumes:
      - name: docker-cache-overlay2
        path: /drone/docker/overlay2
      - name: docker-cache-image
        path: /drone/docker/image
    settings:
      storage_driver: overlay2 --dns=192.168.10.1
      cmd:
        - mkdir /drone/dockerconfig
        - echo $DOCKER_CONFIG_JSON > /drone/dockerconfig/config.json
        - chmod +x gradlew
        - ./gradlew integrationTest
      build_image: eclipse-temurin:17-jdk

  - name: checkstyle
    image: eclipse-temurin:17-jdk
    environment:
      GRADLE_USER_HOME: /drone/src/gradle_cache
    commands:
      - ./gradlew checkstyleMain

  - name: sync-reports
    image: alpine:3
    commands:
      - mkdir -p /var/webfiles/${DRONE_BUILD_NUMBER}
      - cp -r build/reports /var/webfiles/${DRONE_BUILD_NUMBER}
    volumes:
      - name: webfiles
        path: /var/webfiles
    when:
      status: [ success, failure ]

  - name: code-analysis
    image: repo1.dev.fivium.local:5000/sonarcloud-scan-java17:latest
    environment:
      SONARCLOUD_TOKEN:
        from_secret: sonarcloud_token
      GRADLE_USER_HOME: /drone/src/gradle_cache
      # This SONAR_USER_HOME is the cache path - not the actual user home
      SONAR_USER_HOME: /drone/src/sonar_cache
    commands:
      - chmod +x gradlew
      - ./gradlew sonarqube -info
    when:
      # The Pull Request Pipeline will run the Code Analysis on all other branches (once a PR is open)
      branch:
        - develop
        - main
        - drone/*

  - name: publish-snapshot
    image: eclipse-temurin:17-jdk
    environment:
      GRADLE_USER_HOME: /drone/src/gradle_cache
      NEXUS_USERNAME: jenkins
      NEXUS_PASSWORD:
        from_secret: nexus_password
    commands:
      - export MAVEN_PUBLICATION_VERSION=$(echo $DRONE_BRANCH | sed 's/feature\\\///g' | sed 's/\\\//-/g')-SNAPSHOT
      - echo $MAVEN_PUBLICATION_VERSION
      - ./gradlew publishMavenPublicationToSnapshotsRepository
    when:
      branch:
        - develop
        - feature/**
      event: push

  - name: publish-release
    image: eclipse-temurin:17-jdk
    environment:
      GRADLE_USER_HOME: /drone/src/gradle_cache
      NEXUS_USERNAME: jenkins
      NEXUS_PASSWORD:
        from_secret: nexus_password
    commands:
      - export MAVEN_PUBLICATION_VERSION=$DRONE_TAG
      - echo $MAVEN_PUBLICATION_VERSION
      - ./gradlew publishMavenPublicationToReleasesRepository
    when:
      event: tag
      
  - name: scan-and-sync-public-repo
    image: quay.io/fivium/drone-trufflehog-plugin:v1.0
    settings:
      scan_since_commit_hash: 80120dbdfafb6e765e90f880dcec40b683708fa8
      sync_to_mirror: true
      mirror_remote_url: git@github.com:North-Sea-Transition-Authority/digital-notification-library.git
      mirror_branch_to_sync: develop
      mirror_remote_ssh_key:
        from_secret: sync_ssh_key
    when:
      event:
        - push
      branch:
        - develop

  - name: rebuild-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: drone-cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./node_modules
        - ./gradle_cache
        - ./sonar_cache

  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: digital-shared-services-builds
      template: "*{{build.status}}* <{{build.link}}|Commit {{truncate build.commit 7}} on {{build.branch}} by ${DRONE_COMMIT_AUTHOR_NAME}>\nReports published to: http://drone-assets.fivium.local:9090/digital-notification-library/{{build.number}}/"
    when:
      status: [ success, failure ]

  - name: slack-publish-release
    image: plugins/slack
    settings:
      channel: digital-shared-services
      icon_url: https://cdn.worldvectorlogo.com/logos/drone.svg
      template: "<!channel> *Digital Notification Library: ${DRONE_TAG}* has been released by ${DRONE_COMMIT_AUTHOR_NAME}\nRelease notes: https://github.com/Fivium/digital-notification-library/releases/tag/${DRONE_TAG}"
      username: drone
      webhook:
        from_secret: slack_webhook_publish_release
    when:
      event:
        - tag
      status:
        - success

trigger:
  event:
    include:
      - push
      - tag

volumes:
  - name: webfiles
    host:
      path: /home/fivium/www/digital-notification-library

  - name: drone-cache
    host:
      path: /home/fivium/drone-cache

  - name: docker-cache-overlay2
    host:
      path: /home/fivium/docker-drone-cache-v2/overlay2

  - name: docker-cache-image
    host:
      path: /home/fivium/docker-drone-cache-v2/image

  - name: docker-sock
    host:
      path: /var/run/docker.sock

  - name: drone-trivy-cache
    host:
      path: /root/.cache/

---

kind: pipeline
type: docker
name: github-pr

clone:
  disable: true

steps:
  - name: clone
    image: alpine/git:latest
    commands:
      # Manually cloning as there seems to be a bug with DRONE_BRANCH on Pull Request Events
      # DRONE_BRANCH is set to the target branch, rather than the current branch
      # This means that Sonarcloud doesn't think anything has changed
      - git clone https://github.com/Fivium/digital-notification-library.git .
      - git checkout $DRONE_SOURCE_BRANCH

  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: drone-cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./node_modules
        # We can only mount volume caches into the working directory, so all steps which use Gradle must have
        # the GRADLE_USER_HOME environment variable pointing here.
        - ./gradle_cache
        - ./sonar_cache

  # This is in the PR pipeline so the code-analysis below can access the test data (to see coverage)
  - name: tests
    image: eclipse-temurin:17-jdk
    environment:
      GRADLE_USER_HOME: /drone/src/gradle_cache
    commands:
      - chmod +x gradlew
      - ./gradlew test

  # This is in the PR pipeline as only PR events get the necessary information for proper github integration
  - name: code-analysis
    image: repo1.dev.fivium.local:5000/sonarcloud-scan-java17:latest
    environment:
      SONARCLOUD_TOKEN:
        from_secret: sonarcloud_token
      GRADLE_USER_HOME: /drone/src/gradle_cache
      # This SONAR_USER_HOME is the cache path - not the actual user home
      SONAR_USER_HOME: /drone/src/sonar_cache
    commands:
      - chmod +x gradlew
      - ./gradlew sonarqube -info

  - name: rebuild-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: drone-cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./node_modules
        - ./gradle_cache
        - ./sonar_cache

trigger:
  event:
    - pull_request

volumes:
  - name: drone-cache
    host:
      path: /home/fivium/drone-cache

---

kind: secret
name: docker_config
data: 86lXx36mRLEPdNz4FRxizf3Ak6ELZhM3V1/rwjtTEtX2EsQjz0BMFsSujlhCSjWiOWJPMWGeRQNCROcF6iC00OAHq7sFBg8YIH8noF9sWMJxIFTpFAmwqG74BycO+HvGpRIgX8C+Qtno+F+PkNn+UvAV38GaGzQmzw7tyA69PPZtmVGbR8gkYn7EGhhmR/sQoLa+sLRquXSfrYum2lEc/+dsE1WU9Zm6o3HkdAd0Vw53beUZSD+z07kwtX8UbR7+SCSWEBFSx1q00lor5pQ3pW+brg5+hUK/dEqMt5w3vY6A6JOwUpGpjgdR0CzH8BuzyxgokqJiAqu/FLhXqb+rcIPA0svSyemi8R5TErCo

---

kind: secret
name: sonarcloud_token
data: 3YdO3QScFVxr1EHSBu768DAhDdyDI04JS6vPe7gWYY20WP9Bh/goq4pvDpBhqFsyBbVFLJ3yLh+ChG4Oneswf0TovMk=

---

kind: secret
name: nexus_password
data: 1RlwKOivHoL91g3V0JvAQZKXZ4JCutNNdxClYJIapoYNP+YdhA==

---

# https://tpm.fivium.co.uk/index.php/pwd/view/2246
kind: secret
name: govuk_notify_integration_test_api_key
data: GcT4MvwGPiTmvN7i9UQ9F6DPFZMLD5fsOITYdabptayBdvKe7SJk9/Hl6DZ7zBztp167b/6j9b3FUQrnTRD/Zzy4ITS9P66h0gOlaxmCUKYN+4+dTLOSmCAXDbvUBD++AY4BCWv74I0Xg0IokB333lJkyvSWELgVa13dd1ggBrtU6HLVN7OkIxGkcqzfwpTDg9+5

---

kind: secret
name: slack_webhook
data: o6gU9pcM7JtleeSoVau/KAAx3gqf4mFKWZTF4oOl3lnvJsmgC8IEohWqcI6oOVHKudbMY3xhlIyAsmYC8bywt7YA58rWW72Qu8swK+ndqUCLUm8VyjM/FmJC8q8+0w99c+Agdq3aRSLLN/4=

---

kind: secret
name: slack_webhook_publish_release
data: o3ClJU+27v3MdQF3cl4dhQadTCXldwqg6wVOfqf1wGq3swjdpke3WNu/mgwwEeWPd4zXBs4ESzNqAhN5JRnoG+w+OT8V2zPzQ5v87sHC3qPuvqWvLRS+zyUnnc2WMUM/V1bjmtPDjsM6pZA=
---

kind: secret
name: sync_ssh_key
data: PFjxQM8cQ6SYjm8RL5hXxZmw8RRUlwJtaY//+gOb9Lk3q5YTpRSBgnC5G1HTnivh7B/lAnOnNcXOXHC/hpGT4z9YTr0Gjh+5+X9jmW3FoCPI3eWlrh4lvN+wSfoKl7jrALYraHJavKyUjQxjzQ9LdO+gkh5KQtO4zLTF6AxQEbolX9AHgFfSvhPJrg9TSNpmN08fO02rHV3FAfHDZ+qUapGH8ONfdbFfUOA3kZHZOWhv5n8rtA9AOuUrc0s0g32ObkbTrGeyG5kRf9S+XIFBVNFVP/Os9iPKaWUh6YVHkccQEDxyWcVOOyODLmwEpUTIp7ihWd3hLdAEPeAX/E5fdH8fvs2c3N7sMxSMwperjZRJjMyVIomilzeDeEyqj6qfr2CcwA2XKspu7xoxOFOwHAcWoYXhpXYmDv3OtOkOWXzPWM4xxE5o4FI3t7ht2hTf7XzAPD3MecD++HPlHTS/0QYepT5z8fHg4zLmrrarHDOpFiPVSMypY+9cKSGWYs9hAOuYqD1hMQCGSw7+Ggyt4V7LCg0N4Iz5pvGA/p47tfGlG9/rcp8v04gpi8yDe22QZBNNslF7Vkx8wBzGhV9BdxWFcwZloP31yAxLccA=
